export const rulesNameMap = {
  matchModeName: '匹配模式',
  ruleCount: '规则数',
  ruleList: '规则',
  ruleSetName: '规则集名称',
  conditionCount: '条件数',
  conditionTypeDtoList: '条件类型列表',
  expression: '条件表达式',
  riskPolicy: '风险决策',
  riskRank: '风险权重',
  ruleCode: '规则编码',
  ruleName: '规则名称',
  conditionType: '条件类型',
  conditionTypeName: '条件类型名称',
  comparativeValue: '比较值',
  computeData: '计算数据',
  conditionName: '条件名称',
  conditionScenarioName: '条件场景名',
  conditionScenarioValue: '条件场景值',
  conjunction: '连接符',
  description: '描述',
  filterStr: '筛选条件',
  isMatch: '是否匹配',
  hasFilter: '是否有筛选条件',
  ldata: '左数据',
  lgeolocation: '左地理位置',
  listType: '黑名单名称类型',
  matchLevel: '匹配等级',
  operatorStr: '比较符',
  period: '时间段',
  rdata: '右数据',
  unit: '单位',
  rgeolocation: '右地理位置',
  errorMsg: '失败原因',
  finalDecision: '最终决策结果',
  finalScore: '最终决策分值',
  hitRules: '命中规则',
  success: '是否成功',
  arithmetic: '计算表达式',
  policyThreshold: '决策阀值',
  conditionId: '条件编号',
  ruleSet: '所属规则集'
}

export const conditionTypeMap = {
  0: '一般条件',
  1: '首次关联',
  2: '时间差',
  3: '统计条件:求和',
  4: '统计条件:求平均',
  5: '统计条件:个数',
  6: '统计条件:次数',
  7: '位置条件 移动距离',
  9: '风险名单库',
  10: '四则运算条件'
}
export const conditionSort = {
  0: ['conditionId', 'conditionName', 'conditionScenarioName', 'conditionScenarioValue', 'conditionTypeName', 'description', 'computeData', 'arithmetic', 'conjunction', 'isMatch', 'listType', 'period', 'ldata', 'lgeolocation', 'operatorStr', 'rdata', 'rgeolocation', 'comparativeValue', 'hasFilter', 'filterStr'],
  1: ['conditionId', 'conditionName', 'description', 'conditionScenarioName', 'period', 'computeData', 'arithmetic', 'conjunction', 'isMatch', 'listType', 'ldata', 'lgeolocation', 'operatorStr', 'rdata', 'rgeolocation', 'comparativeValue', 'hasFilter', 'filterStr'],
  2: ['conditionId', 'conditionName', 'description', 'conditionScenarioName', 'operatorStr', 'period', 'computeData', 'arithmetic', 'conjunction', 'isMatch', 'listType', 'ldata', 'lgeolocation', 'rdata', 'rgeolocation', 'comparativeValue', 'hasFilter', 'filterStr'],
  statistical: ['conditionId', 'conditionName', 'description', 'conditionScenarioName', 'period', 'computeData', 'arithmetic', 'conjunction', 'isMatch', 'listType', 'ldata', 'lgeolocation', 'operatorStr', 'rdata', 'rgeolocation', 'comparativeValue', 'hasFilter', 'filterStr'],
  7: ['conditionId;', 'conditionName;', 'description;', 'conditionScenarioName;', 'period;', 'computeData;', 'arithmetic;', 'conjunction;', 'isMatch;', 'listType;', 'ldata;', 'lgeolocation;', 'operatorStr;', 'rdata;', 'rgeolocation;', 'comparativeValue;', 'hasFilter;', 'filterStr;'],
  9: ['conditionId', 'conditionName', 'description', 'conditionScenarioName', 'period', 'computeData', 'arithmetic', 'conjunction', 'ldata', 'lgeolocation', 'operatorStr', 'rdata', 'rgeolocation', 'comparativeValue', 'listType', 'isMatch', 'hasFilter', 'filterStr'],
  10: ['conditionId', 'conditionName', 'description', 'conditionScenarioName', 'computeData', 'conjunction', 'isMatch', 'listType', 'period', 'ldata', 'lgeolocation', 'arithmetic', 'rdata', 'rgeolocation', 'operatorStr', 'comparativeValue', 'hasFilter', 'filterStr']
}

export const dictFieldConvertConfig = {
  conditionName: '条件名',
  lData: '数据A',
  rulesetScenarioName: '本次场景',
  conditionScenarioName: '上次场景',
  dataType: '数据类型',
  operation: '操作类型',
  rData: '数据B',
  operatorStr: '操作符',
  conditionTypeIndex: '计算方式',
  computeData: '计算数据',
  period: '时间段',
  unit: '单位',
  lGeolocation: '左地理位置',
  rGeolocation: '右地理位置',
  listType: '名单类型',
  verifyType: '验证类型',
  comparativeValue: '常数值',
  matchLevel: '匹配级别',
  arithmetic: '算数表达式',
  conjunction: '连接符',
  isMatch: '是否匹配',
  hasFilter: '是否有筛选条件',
  description: '描述'
}
